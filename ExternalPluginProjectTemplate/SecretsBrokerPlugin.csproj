<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <RootNamespace>$safeprojectname$</RootNamespace>
    <AssemblyName>$safeprojectname$</AssemblyName>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <Platforms>x64</Platforms>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PlatformTarget>x64</PlatformTarget>
    <OutputPath>bin\Release\</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PlatformTarget>x64</PlatformTarget>
    <!--<OutputPath>bin\Debug\</OutputPath>-->
    
    <!-- You can develop and debug locally by having Visual Studio copy the output of the build directly
    to this folder. -->
    <OutputPath>C:\ProgramData\SafeguardDevOpsService\ExternalPlugins\$safeprojectname$\</OutputPath>
  </PropertyGroup>

  <!-- If you are developing the plugin along with the rest of the entire solution, and plan on building and deploying
  the entire solution, you can use this project reference instead. -->
  <!--
  <ItemGroup>
    <ProjectReference Include="..\..\DevOpsPluginCommon\DevOpsPluginCommon.csproj" />
  </ItemGroup>
  -->
  
   <!-- If you are developing the plugin using a standalone project, copy the OneIdentity.SafeguardSecretsBroker.PluginCommon.dll
   locally and use this file assembly reference. -->
  <ItemGroup>
    <Reference Include="OneIdentity.SafeguardSecretsBroker.PluginCommon">
      <HintPath>OneIdentity.SafeguardSecretsBroker.PluginCommon.dll</HintPath>
    </Reference>
  </ItemGroup>

  <!-- When using the file assembly reference from above, exclude the DLL file from the project. -->
  <ItemGroup>
    <None Remove="OneIdentity.SafeguardSecretsBroker.PluginCommon.dll" />
  </ItemGroup>
  
  <!-- If you are developing the plugin using a standalone project, it will need a reference to Serilog. Otherwise, the reference
  will automatically be obtained through the project reference to DevOpsPluginCommon.csproj. -->
  <ItemGroup>
    <PackageReference Include="Serilog" Version="2.0.0" />
      
    <!-- You may or may not need a reference to Newtonsoft.Json, depending on your implementation.
    If needed, use this version, 13.0.3, which is the same version used by the Secrets Broker service. -->
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- To import the plugin via the Secrets Broker web UI, use the following post build event
  and PowerShell script from the main repository. -->
  <!--
  <Target Name="PostBuildWindows" AfterTargets="PostBuildEvent">
    <Exec Command="powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command &quot;&amp; '$(SolutionDir)zipplugin.ps1' '$(ProjectDir)' '$(OutDir)' '$(SolutionDir)ExternalPlugins\bin\$(Configuration)\' '$(buildId)'&quot;" EchoOff="False" IgnoreExitCode="False" LogStandardErrorAsError="True" ContinueOnError="False" ConsoleToMsBuild="True" />
  </Target>
  -->

</Project>
